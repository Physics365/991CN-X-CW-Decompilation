/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBMemoryRegionInfoList {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBMemoryRegionInfoList(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBMemoryRegionInfoList obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBMemoryRegionInfoList(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBMemoryRegionInfoList() {
    this(lldbJNI.new_SBMemoryRegionInfoList__SWIG_0(), true);
  }

  public SBMemoryRegionInfoList(SBMemoryRegionInfoList rhs) {
    this(lldbJNI.new_SBMemoryRegionInfoList__SWIG_1(SBMemoryRegionInfoList.getCPtr(rhs), rhs), true);
  }

  public long GetSize() {
    return lldbJNI.SBMemoryRegionInfoList_GetSize(swigCPtr, this);
  }

  public boolean GetMemoryRegionContainingAddress(java.math.BigInteger addr, SBMemoryRegionInfo region_info) {
    return lldbJNI.SBMemoryRegionInfoList_GetMemoryRegionContainingAddress(swigCPtr, this, addr, SBMemoryRegionInfo.getCPtr(region_info), region_info);
  }

  public boolean GetMemoryRegionAtIndex(long idx, SBMemoryRegionInfo region_info) {
    return lldbJNI.SBMemoryRegionInfoList_GetMemoryRegionAtIndex(swigCPtr, this, idx, SBMemoryRegionInfo.getCPtr(region_info), region_info);
  }

  public void Append(SBMemoryRegionInfo region) {
    lldbJNI.SBMemoryRegionInfoList_Append__SWIG_0(swigCPtr, this, SBMemoryRegionInfo.getCPtr(region), region);
  }

  public void Append(SBMemoryRegionInfoList region_list) {
    lldbJNI.SBMemoryRegionInfoList_Append__SWIG_1(swigCPtr, this, SBMemoryRegionInfoList.getCPtr(region_list), region_list);
  }

  public void Clear() {
    lldbJNI.SBMemoryRegionInfoList_Clear(swigCPtr, this);
  }

}
