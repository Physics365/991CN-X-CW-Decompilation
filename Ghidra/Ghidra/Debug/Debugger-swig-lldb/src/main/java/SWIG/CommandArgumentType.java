/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class CommandArgumentType {
  public final static CommandArgumentType eArgTypeAddress = new CommandArgumentType("eArgTypeAddress", lldbJNI.eArgTypeAddress_get());
  public final static CommandArgumentType eArgTypeAddressOrExpression = new CommandArgumentType("eArgTypeAddressOrExpression");
  public final static CommandArgumentType eArgTypeAliasName = new CommandArgumentType("eArgTypeAliasName");
  public final static CommandArgumentType eArgTypeAliasOptions = new CommandArgumentType("eArgTypeAliasOptions");
  public final static CommandArgumentType eArgTypeArchitecture = new CommandArgumentType("eArgTypeArchitecture");
  public final static CommandArgumentType eArgTypeBoolean = new CommandArgumentType("eArgTypeBoolean");
  public final static CommandArgumentType eArgTypeBreakpointID = new CommandArgumentType("eArgTypeBreakpointID");
  public final static CommandArgumentType eArgTypeBreakpointIDRange = new CommandArgumentType("eArgTypeBreakpointIDRange");
  public final static CommandArgumentType eArgTypeBreakpointName = new CommandArgumentType("eArgTypeBreakpointName");
  public final static CommandArgumentType eArgTypeByteSize = new CommandArgumentType("eArgTypeByteSize");
  public final static CommandArgumentType eArgTypeClassName = new CommandArgumentType("eArgTypeClassName");
  public final static CommandArgumentType eArgTypeCommandName = new CommandArgumentType("eArgTypeCommandName");
  public final static CommandArgumentType eArgTypeCount = new CommandArgumentType("eArgTypeCount");
  public final static CommandArgumentType eArgTypeDescriptionVerbosity = new CommandArgumentType("eArgTypeDescriptionVerbosity");
  public final static CommandArgumentType eArgTypeDirectoryName = new CommandArgumentType("eArgTypeDirectoryName");
  public final static CommandArgumentType eArgTypeDisassemblyFlavor = new CommandArgumentType("eArgTypeDisassemblyFlavor");
  public final static CommandArgumentType eArgTypeEndAddress = new CommandArgumentType("eArgTypeEndAddress");
  public final static CommandArgumentType eArgTypeExpression = new CommandArgumentType("eArgTypeExpression");
  public final static CommandArgumentType eArgTypeExpressionPath = new CommandArgumentType("eArgTypeExpressionPath");
  public final static CommandArgumentType eArgTypeExprFormat = new CommandArgumentType("eArgTypeExprFormat");
  public final static CommandArgumentType eArgTypeFileLineColumn = new CommandArgumentType("eArgTypeFileLineColumn");
  public final static CommandArgumentType eArgTypeFilename = new CommandArgumentType("eArgTypeFilename");
  public final static CommandArgumentType eArgTypeFormat = new CommandArgumentType("eArgTypeFormat");
  public final static CommandArgumentType eArgTypeFrameIndex = new CommandArgumentType("eArgTypeFrameIndex");
  public final static CommandArgumentType eArgTypeFullName = new CommandArgumentType("eArgTypeFullName");
  public final static CommandArgumentType eArgTypeFunctionName = new CommandArgumentType("eArgTypeFunctionName");
  public final static CommandArgumentType eArgTypeFunctionOrSymbol = new CommandArgumentType("eArgTypeFunctionOrSymbol");
  public final static CommandArgumentType eArgTypeGDBFormat = new CommandArgumentType("eArgTypeGDBFormat");
  public final static CommandArgumentType eArgTypeHelpText = new CommandArgumentType("eArgTypeHelpText");
  public final static CommandArgumentType eArgTypeIndex = new CommandArgumentType("eArgTypeIndex");
  public final static CommandArgumentType eArgTypeLanguage = new CommandArgumentType("eArgTypeLanguage");
  public final static CommandArgumentType eArgTypeLineNum = new CommandArgumentType("eArgTypeLineNum");
  public final static CommandArgumentType eArgTypeLogCategory = new CommandArgumentType("eArgTypeLogCategory");
  public final static CommandArgumentType eArgTypeLogChannel = new CommandArgumentType("eArgTypeLogChannel");
  public final static CommandArgumentType eArgTypeMethod = new CommandArgumentType("eArgTypeMethod");
  public final static CommandArgumentType eArgTypeName = new CommandArgumentType("eArgTypeName");
  public final static CommandArgumentType eArgTypeNewPathPrefix = new CommandArgumentType("eArgTypeNewPathPrefix");
  public final static CommandArgumentType eArgTypeNumLines = new CommandArgumentType("eArgTypeNumLines");
  public final static CommandArgumentType eArgTypeNumberPerLine = new CommandArgumentType("eArgTypeNumberPerLine");
  public final static CommandArgumentType eArgTypeOffset = new CommandArgumentType("eArgTypeOffset");
  public final static CommandArgumentType eArgTypeOldPathPrefix = new CommandArgumentType("eArgTypeOldPathPrefix");
  public final static CommandArgumentType eArgTypeOneLiner = new CommandArgumentType("eArgTypeOneLiner");
  public final static CommandArgumentType eArgTypePath = new CommandArgumentType("eArgTypePath");
  public final static CommandArgumentType eArgTypePermissionsNumber = new CommandArgumentType("eArgTypePermissionsNumber");
  public final static CommandArgumentType eArgTypePermissionsString = new CommandArgumentType("eArgTypePermissionsString");
  public final static CommandArgumentType eArgTypePid = new CommandArgumentType("eArgTypePid");
  public final static CommandArgumentType eArgTypePlugin = new CommandArgumentType("eArgTypePlugin");
  public final static CommandArgumentType eArgTypeProcessName = new CommandArgumentType("eArgTypeProcessName");
  public final static CommandArgumentType eArgTypePythonClass = new CommandArgumentType("eArgTypePythonClass");
  public final static CommandArgumentType eArgTypePythonFunction = new CommandArgumentType("eArgTypePythonFunction");
  public final static CommandArgumentType eArgTypePythonScript = new CommandArgumentType("eArgTypePythonScript");
  public final static CommandArgumentType eArgTypeQueueName = new CommandArgumentType("eArgTypeQueueName");
  public final static CommandArgumentType eArgTypeRegisterName = new CommandArgumentType("eArgTypeRegisterName");
  public final static CommandArgumentType eArgTypeRegularExpression = new CommandArgumentType("eArgTypeRegularExpression");
  public final static CommandArgumentType eArgTypeRunArgs = new CommandArgumentType("eArgTypeRunArgs");
  public final static CommandArgumentType eArgTypeRunMode = new CommandArgumentType("eArgTypeRunMode");
  public final static CommandArgumentType eArgTypeScriptedCommandSynchronicity = new CommandArgumentType("eArgTypeScriptedCommandSynchronicity");
  public final static CommandArgumentType eArgTypeScriptLang = new CommandArgumentType("eArgTypeScriptLang");
  public final static CommandArgumentType eArgTypeSearchWord = new CommandArgumentType("eArgTypeSearchWord");
  public final static CommandArgumentType eArgTypeSelector = new CommandArgumentType("eArgTypeSelector");
  public final static CommandArgumentType eArgTypeSettingIndex = new CommandArgumentType("eArgTypeSettingIndex");
  public final static CommandArgumentType eArgTypeSettingKey = new CommandArgumentType("eArgTypeSettingKey");
  public final static CommandArgumentType eArgTypeSettingPrefix = new CommandArgumentType("eArgTypeSettingPrefix");
  public final static CommandArgumentType eArgTypeSettingVariableName = new CommandArgumentType("eArgTypeSettingVariableName");
  public final static CommandArgumentType eArgTypeShlibName = new CommandArgumentType("eArgTypeShlibName");
  public final static CommandArgumentType eArgTypeSourceFile = new CommandArgumentType("eArgTypeSourceFile");
  public final static CommandArgumentType eArgTypeSortOrder = new CommandArgumentType("eArgTypeSortOrder");
  public final static CommandArgumentType eArgTypeStartAddress = new CommandArgumentType("eArgTypeStartAddress");
  public final static CommandArgumentType eArgTypeSummaryString = new CommandArgumentType("eArgTypeSummaryString");
  public final static CommandArgumentType eArgTypeSymbol = new CommandArgumentType("eArgTypeSymbol");
  public final static CommandArgumentType eArgTypeThreadID = new CommandArgumentType("eArgTypeThreadID");
  public final static CommandArgumentType eArgTypeThreadIndex = new CommandArgumentType("eArgTypeThreadIndex");
  public final static CommandArgumentType eArgTypeThreadName = new CommandArgumentType("eArgTypeThreadName");
  public final static CommandArgumentType eArgTypeTypeName = new CommandArgumentType("eArgTypeTypeName");
  public final static CommandArgumentType eArgTypeUnsignedInteger = new CommandArgumentType("eArgTypeUnsignedInteger");
  public final static CommandArgumentType eArgTypeUnixSignal = new CommandArgumentType("eArgTypeUnixSignal");
  public final static CommandArgumentType eArgTypeVarName = new CommandArgumentType("eArgTypeVarName");
  public final static CommandArgumentType eArgTypeValue = new CommandArgumentType("eArgTypeValue");
  public final static CommandArgumentType eArgTypeWidth = new CommandArgumentType("eArgTypeWidth");
  public final static CommandArgumentType eArgTypeNone = new CommandArgumentType("eArgTypeNone");
  public final static CommandArgumentType eArgTypePlatform = new CommandArgumentType("eArgTypePlatform");
  public final static CommandArgumentType eArgTypeWatchpointID = new CommandArgumentType("eArgTypeWatchpointID");
  public final static CommandArgumentType eArgTypeWatchpointIDRange = new CommandArgumentType("eArgTypeWatchpointIDRange");
  public final static CommandArgumentType eArgTypeWatchType = new CommandArgumentType("eArgTypeWatchType");
  public final static CommandArgumentType eArgRawInput = new CommandArgumentType("eArgRawInput");
  public final static CommandArgumentType eArgTypeCommand = new CommandArgumentType("eArgTypeCommand");
  public final static CommandArgumentType eArgTypeColumnNum = new CommandArgumentType("eArgTypeColumnNum");
  public final static CommandArgumentType eArgTypeModuleUUID = new CommandArgumentType("eArgTypeModuleUUID");
  public final static CommandArgumentType eArgTypeSaveCoreStyle = new CommandArgumentType("eArgTypeSaveCoreStyle");
  public final static CommandArgumentType eArgTypeLogHandler = new CommandArgumentType("eArgTypeLogHandler");
  public final static CommandArgumentType eArgTypeSEDStylePair = new CommandArgumentType("eArgTypeSEDStylePair");
  public final static CommandArgumentType eArgTypeRecognizerID = new CommandArgumentType("eArgTypeRecognizerID");
  public final static CommandArgumentType eArgTypeConnectURL = new CommandArgumentType("eArgTypeConnectURL");
  public final static CommandArgumentType eArgTypeTargetID = new CommandArgumentType("eArgTypeTargetID");
  public final static CommandArgumentType eArgTypeStopHookID = new CommandArgumentType("eArgTypeStopHookID");
  public final static CommandArgumentType eArgTypeLastArg = new CommandArgumentType("eArgTypeLastArg");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static CommandArgumentType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + CommandArgumentType.class + " with value " + swigValue);
  }

  private CommandArgumentType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private CommandArgumentType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private CommandArgumentType(String swigName, CommandArgumentType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static CommandArgumentType[] swigValues = { eArgTypeAddress, eArgTypeAddressOrExpression, eArgTypeAliasName, eArgTypeAliasOptions, eArgTypeArchitecture, eArgTypeBoolean, eArgTypeBreakpointID, eArgTypeBreakpointIDRange, eArgTypeBreakpointName, eArgTypeByteSize, eArgTypeClassName, eArgTypeCommandName, eArgTypeCount, eArgTypeDescriptionVerbosity, eArgTypeDirectoryName, eArgTypeDisassemblyFlavor, eArgTypeEndAddress, eArgTypeExpression, eArgTypeExpressionPath, eArgTypeExprFormat, eArgTypeFileLineColumn, eArgTypeFilename, eArgTypeFormat, eArgTypeFrameIndex, eArgTypeFullName, eArgTypeFunctionName, eArgTypeFunctionOrSymbol, eArgTypeGDBFormat, eArgTypeHelpText, eArgTypeIndex, eArgTypeLanguage, eArgTypeLineNum, eArgTypeLogCategory, eArgTypeLogChannel, eArgTypeMethod, eArgTypeName, eArgTypeNewPathPrefix, eArgTypeNumLines, eArgTypeNumberPerLine, eArgTypeOffset, eArgTypeOldPathPrefix, eArgTypeOneLiner, eArgTypePath, eArgTypePermissionsNumber, eArgTypePermissionsString, eArgTypePid, eArgTypePlugin, eArgTypeProcessName, eArgTypePythonClass, eArgTypePythonFunction, eArgTypePythonScript, eArgTypeQueueName, eArgTypeRegisterName, eArgTypeRegularExpression, eArgTypeRunArgs, eArgTypeRunMode, eArgTypeScriptedCommandSynchronicity, eArgTypeScriptLang, eArgTypeSearchWord, eArgTypeSelector, eArgTypeSettingIndex, eArgTypeSettingKey, eArgTypeSettingPrefix, eArgTypeSettingVariableName, eArgTypeShlibName, eArgTypeSourceFile, eArgTypeSortOrder, eArgTypeStartAddress, eArgTypeSummaryString, eArgTypeSymbol, eArgTypeThreadID, eArgTypeThreadIndex, eArgTypeThreadName, eArgTypeTypeName, eArgTypeUnsignedInteger, eArgTypeUnixSignal, eArgTypeVarName, eArgTypeValue, eArgTypeWidth, eArgTypeNone, eArgTypePlatform, eArgTypeWatchpointID, eArgTypeWatchpointIDRange, eArgTypeWatchType, eArgRawInput, eArgTypeCommand, eArgTypeColumnNum, eArgTypeModuleUUID, eArgTypeSaveCoreStyle, eArgTypeLogHandler, eArgTypeSEDStylePair, eArgTypeRecognizerID, eArgTypeConnectURL, eArgTypeTargetID, eArgTypeStopHookID, eArgTypeLastArg };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

