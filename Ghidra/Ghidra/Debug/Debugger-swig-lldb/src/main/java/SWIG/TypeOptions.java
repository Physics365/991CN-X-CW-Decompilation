/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class TypeOptions {
  public final static TypeOptions eTypeOptionNone = new TypeOptions("eTypeOptionNone", lldbJNI.eTypeOptionNone_get());
  public final static TypeOptions eTypeOptionCascade = new TypeOptions("eTypeOptionCascade", lldbJNI.eTypeOptionCascade_get());
  public final static TypeOptions eTypeOptionSkipPointers = new TypeOptions("eTypeOptionSkipPointers", lldbJNI.eTypeOptionSkipPointers_get());
  public final static TypeOptions eTypeOptionSkipReferences = new TypeOptions("eTypeOptionSkipReferences", lldbJNI.eTypeOptionSkipReferences_get());
  public final static TypeOptions eTypeOptionHideChildren = new TypeOptions("eTypeOptionHideChildren", lldbJNI.eTypeOptionHideChildren_get());
  public final static TypeOptions eTypeOptionHideValue = new TypeOptions("eTypeOptionHideValue", lldbJNI.eTypeOptionHideValue_get());
  public final static TypeOptions eTypeOptionShowOneLiner = new TypeOptions("eTypeOptionShowOneLiner", lldbJNI.eTypeOptionShowOneLiner_get());
  public final static TypeOptions eTypeOptionHideNames = new TypeOptions("eTypeOptionHideNames", lldbJNI.eTypeOptionHideNames_get());
  public final static TypeOptions eTypeOptionNonCacheable = new TypeOptions("eTypeOptionNonCacheable", lldbJNI.eTypeOptionNonCacheable_get());
  public final static TypeOptions eTypeOptionHideEmptyAggregates = new TypeOptions("eTypeOptionHideEmptyAggregates", lldbJNI.eTypeOptionHideEmptyAggregates_get());
  public final static TypeOptions eTypeOptionFrontEndWantsDereference = new TypeOptions("eTypeOptionFrontEndWantsDereference", lldbJNI.eTypeOptionFrontEndWantsDereference_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static TypeOptions swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + TypeOptions.class + " with value " + swigValue);
  }

  private TypeOptions(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private TypeOptions(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private TypeOptions(String swigName, TypeOptions swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static TypeOptions[] swigValues = { eTypeOptionNone, eTypeOptionCascade, eTypeOptionSkipPointers, eTypeOptionSkipReferences, eTypeOptionHideChildren, eTypeOptionHideValue, eTypeOptionShowOneLiner, eTypeOptionHideNames, eTypeOptionNonCacheable, eTypeOptionHideEmptyAggregates, eTypeOptionFrontEndWantsDereference };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

