从本章开始的各章都围绕着第一个主题：输入区。本章将要讲解字符和光标的基础知识。
    字符的概念相信大家都已明白。字符在内存中储存，对卡西欧的程序员来说，最自然的想法就是每个字符占一字节，按序储存。但是，一个字节的数据只有256种可能。上代ES型号里，就采取了每个字符一字节的办法，结果把控制字符、数字、变量、函数、算符，还有科学常数、单位换算全都挤在256个格子里，塞得满满当当。而现在的型号，有更多的科学常数和单位换算（日版有200多个单位换算！）那么单个字节是无论如何也塞不下了。那么是不是要全部改为双字节呢？那也不至于，因为双字节有65536种可能，用不了这么多，而且它会占用一倍的空间。于是卡西欧的程序员采取一种折中办法，同时采取单字节和双字节的字符，为了区分，规定双字节字符的第一个字节以F开头。以下是一些例子：
        31 “1”   FE1A “Pa>atm”   FD3A “re”   FB1A “M+”
    特殊地，还要有个特殊字符来标记字符串的结束。它就是字符00。不过，为了方便，程序中许多操作都以字节为单位来进行，此时对程序来说，标记字符串末尾的就是字节00，也就是NUL，不同于字符00。这就导致像FE00这样的字符在程序的不同部分含义不一样，它有时只是一个一般的字符，有时却能标记字符串的结束。一般来说这不要紧，因为这样的字符在正常情况下不会出现；反过来说，异常就出自这种特殊情况。但在探讨异常前，我们要先学习正常情况下各种操作的逻辑。
    输入区的逻辑分为编辑器和显示器两块，编辑器负责处理增删移插等操作，显示器负责把内存中的字符串打印在屏幕上。两块逻辑之间相对独立。
    显示器的逻辑是：
        1 从字符串的开头开始。
        2 如果光标在这里，那么在屏幕上显示光标。
        3 取一个字节，如果它以F开头，就再取一个，组成一个字符。
        4 如果这个字符是00，那么退出。（在线性模式中，只要这个字符包含NUL就退出，如FE00）
        5 否则，在屏幕上显示这个字符，并向右移动相应字节数。
        6 回到第2步。
    阅读逻辑可以发现，如果光标插在双字节字符的中间，或者在字符00的右边（线性模式中，NUL右边），那么显示器永远找不到光标。在数学模式，光标会停在之前的位置不动（光标默认位置在最左边，如果按第一个键的时候就没找到光标，它就会停在默认位置）；在线性模式，光标会移到最左边。此时我们说“光标卡住了”，光标显示的位置不能反映它在内存中的实际位置。同学们，这时候千万别被它骗了！
    移动光标的逻辑是：
    ←：
        1 如果在历史记录中或在数学模式且光标在开头，那么移到第一个NUL处。
        2 否则，如果前面第二个字节以F开头，就左移2字节，反正移1字节。
    →：
        1 如果在历史记录中或在数学模式且光标在NUL处，那么移到开头。
        2 否则，如果当前字节以F开头，就右移2字节，反正移1字节。
    因此，一般来说，不可能把光标塞到双字节字符中间。有一种情况除外：如果某个双字节字符的两个字节都以F开头，而它右边有个单字节字符时
        Fx Fx xx|
    按←，光标会以为它前面是个双字节字符，于是移动两个字节
        Fx|Fx xx
    这时，光标就插在双字节字符中间了。但是，这样的字符不能直接打出。
    字符转换器需要用到字符“lbf/in2>kPa”（FE23）（shift8↓27）。输入1和lbf/in2>kPa，按=，↑。由于某些原因（今后会讲），在历史记录里，字节23会被吃掉，只剩下字节FE，和后面的NUL拼起来，就是
        31 FE 00 00 ... 
    （字符FE00没有宽度看不到，所以显示出来只有一个1）按←，光标移动到第一个NUL处，也就是FE后面：
        31 FE|00 00 ...
    为什么光标好像在1上？仔细看，这里它就位于双字节字符FE00中间，所以卡住了。不要管它，接下来，输入字符“1”（31）：
        31 FE 31|00 ...
    此时会显示“1l.y.>m”。FE31这个字符本来是打不出的，但被我们通过字符转换器得到了。这就是字符转换器。
    如果在刚才输入第二个字符“1”的位置输入双字节字符会发生什么？输入字符“Pa>kgf/in2”（FE20）（shift8↓26）：
        31 FE FE 20|00 00 ...
    此时会显示“1Unknowi”，其中字符Unknow就是FEFE。按←，光标向左移动一个字符（FE20），看起来好像没有移动：
        31 FE|FE 20 00 00 ...
    这是因为它插在双字节字符中间，卡住了。再按一下←才会移动到字符FEFE上：
        31|FE FE 20 00 00 ...
    按→，向右移动一个字符（FEFE），到字符“i”（20）上：
        31 FE FE|20 00 00 ...
    然后就可以删掉字符FEFE了。你看，计算模式中本来不能打出i，但是它也可以用字符转换器得到。回到上一步，在字符FEFE和字符20之间插入字符“Ran#”（FD18），接下来按←：
        31 FE FE FD 18|20 00 00 ...
        31 FE FE|FD 18 20 00 00 ...
    输入字符“1”：
        31 FE FE 31|FD 18 20 00 ...
    现在按DEL会删除双字节字符FE31：
        31 FE|FD 18 20 00 20 00 ...
    你看，输入了31，却删除了FE31。删除字符的方式和按←差不多，但是注意如果前一个字节以F开头，就会把这个字节以及后一个字节都删掉，比如31 FE|FD 32和31 FE FD|32删除都得到31 32。此时显示“1（一坨）@”，“（一坨）”就是FEFD。光标没有移动，是因为它在双字节字符FEFD中间。如果此时想删除单字节字符18（“@“），那是行不通的，因为前面有FD，会被识别成双字节字符FD18。必须把它们隔开才能删除字符18。按←再按→，把光标移动到18上：
        31 FE FD|18 20 00 20 00 ...
    然后输入任意双字节字符（以“Ran#”（FD18）为例）：
        31 FE FD FD 18|18 20 00 ...
    这样18和FEFD隔开了，就可以正常地删除。把字符18（“@”）和前面的FD18（“Ran#”）都删了，使FEFD和20接触：
        31 FE FD|20 00 20 00 00 ...
    按→再按←，光标移动到FEFD中间：
        31 FE|FD 20 00 20 00 00 ...
    现在输入1：
        31 FE 31|FD 20 00 00 00 ...
    此时显示的是“1l.y.>man”，把其他字符都删掉，就获得了字符“an”（FD20）。这个字符将来用处很大。
    *本教程所有例题请读者先尽力独立完成再查看解析以达到最佳学习效果。
    例1 尝试打出字符FD31。
    参考答案：mn（n为下标）
    参考思路：法一（不推荐）：查字符表得FD31为shift732
    此法应用于能直接打出的字符较为方便，但对大量无法直接打出的字符无能为力。
    法二：已知FD18为Ran#可直接打出，为得到FD31，需设法将光标移至FD与18之间以插入31。由上文可知，若能得到FEFD，就可以将光标移至目标位置。由本节开头得操作可得31FE，请读者熟记这个操作，这是日后许多编辑操作的起点。在31 FE后输入FD18，←←→即可使光标到达目标位置。输入1，←，再输入1，得：
        31 FE 31|FD 31 18
    删去FE31即得FD31。
    例2 尝试打出字符FB31。
    提示：①出现语法错误不要惊慌，按AC ←即可回到最左侧。
          ②此题完成过程中可能出现字符FEFB，该字符不可见，请谨慎完成后续操作。
          ③先按sto再按x即可输入FB18。
    参考答案：上标1
    参考思路：上文的法一已不可用，本题思路与上文法二一致。先输入31 FE FB 18，此时会发生语法错误，但AC →仍可继续编辑。如果你还记得上一章要求看的说明书的话，你应该知道，已经算过一次的式子，不管有没有算出来，AC ←或→都能重新呼出。再按→→，光标位于FB|18之间，依次输入1，←，1即得FB31。
    例题总结：类似上述两例的问题都可通过类似的思路得到结果：
    ①使所需字符相邻，如例一中使FD与31相邻
    ②拆除原有的双字节字符以得到目标字符，如例二中原本FEFB为一个双字节字符，我们通过在FE与FB之间插入31使FB与后面的31结合得到目标字符。
    两个字节都是F开头的字符也可以当做字符转换器，因此可以多次使用。例如，要打出3A和3B，可以用FD3A（shift737）和FD3B（shift738）。在字符转换器中先输入FD3B：
        31 FE FD 3B|00 00 00 00 ...
    ←←→移到FD和3B之间，输入FD3A，然后←，输入1：
        31 FE FD FD 3A|3B 00 00 ...
        31 FE FD 31|FD 3A 3B 00 ...
    按DEL删除FD31：
        31 FE|FD 3A 3B 00 3B 00 ...
    此时，只要再删掉FEFD，就获得了3A（“A”）和3B（“B”）。用这种方法可以连续卡出多个字符。
    例3 尝试打出字符3A到3F。（FD3A到FD3F分别为shift737，...，shift73C）
    参考思路：同上，操作完一次后不要删除FEFD，而是←→移到FD的后面，此时即可进行下一步操作。多次重复就能获得所有需要的字符。
    例4 综合运用上述内容尝试打出3A FD20 3B（表现为AanB）
    参考答案：FE3B ←←→ FE20 ← 1 DEL ←→ FD18 ← 1 DEL ←→ Ran# → DEL DEL →← FE3A
    参考思路：易知所有的字符转换操作都只能围绕字符转换器进行，为按顺序得到答案，我们需要依次得到3B，20，FD，3A；为得到这四个字节，我们依次在FE右侧输入FE3B（shift738），FE20（shift8↓26），FD18（Ran#），FE3A（shift737）；其余的操作则为输入保护字符，以防字符转换器或者所需字节和其他字节结合无法使用。
