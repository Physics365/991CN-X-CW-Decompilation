/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBPlatform {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBPlatform(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBPlatform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBPlatform(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBPlatform() {
    this(lldbJNI.new_SBPlatform__SWIG_0(), true);
  }

  public SBPlatform(String arg0) {
    this(lldbJNI.new_SBPlatform__SWIG_1(arg0), true);
  }

  public static SBPlatform GetHostPlatform() {
    return new SBPlatform(lldbJNI.SBPlatform_GetHostPlatform(), true);
  }

  public boolean IsValid() {
    return lldbJNI.SBPlatform_IsValid(swigCPtr, this);
  }

  public void Clear() {
    lldbJNI.SBPlatform_Clear(swigCPtr, this);
  }

  public String GetWorkingDirectory() {
    return lldbJNI.SBPlatform_GetWorkingDirectory(swigCPtr, this);
  }

  public boolean SetWorkingDirectory(String arg0) {
    return lldbJNI.SBPlatform_SetWorkingDirectory(swigCPtr, this, arg0);
  }

  public String GetName() {
    return lldbJNI.SBPlatform_GetName(swigCPtr, this);
  }

  public SBError ConnectRemote(SBPlatformConnectOptions connect_options) {
    return new SBError(lldbJNI.SBPlatform_ConnectRemote(swigCPtr, this, SBPlatformConnectOptions.getCPtr(connect_options), connect_options), true);
  }

  public void DisconnectRemote() {
    lldbJNI.SBPlatform_DisconnectRemote(swigCPtr, this);
  }

  public boolean IsConnected() {
    return lldbJNI.SBPlatform_IsConnected(swigCPtr, this);
  }

  public String GetTriple() {
    return lldbJNI.SBPlatform_GetTriple(swigCPtr, this);
  }

  public String GetHostname() {
    return lldbJNI.SBPlatform_GetHostname(swigCPtr, this);
  }

  public String GetOSBuild() {
    return lldbJNI.SBPlatform_GetOSBuild(swigCPtr, this);
  }

  public String GetOSDescription() {
    return lldbJNI.SBPlatform_GetOSDescription(swigCPtr, this);
  }

  public long GetOSMajorVersion() {
    return lldbJNI.SBPlatform_GetOSMajorVersion(swigCPtr, this);
  }

  public long GetOSMinorVersion() {
    return lldbJNI.SBPlatform_GetOSMinorVersion(swigCPtr, this);
  }

  public long GetOSUpdateVersion() {
    return lldbJNI.SBPlatform_GetOSUpdateVersion(swigCPtr, this);
  }

  public void SetSDKRoot(String sysroot) {
    lldbJNI.SBPlatform_SetSDKRoot(swigCPtr, this, sysroot);
  }

  public SBError Get(SBFileSpec src, SBFileSpec dst) {
    return new SBError(lldbJNI.SBPlatform_Get(swigCPtr, this, SBFileSpec.getCPtr(src), src, SBFileSpec.getCPtr(dst), dst), true);
  }

  public SBError Put(SBFileSpec src, SBFileSpec dst) {
    return new SBError(lldbJNI.SBPlatform_Put(swigCPtr, this, SBFileSpec.getCPtr(src), src, SBFileSpec.getCPtr(dst), dst), true);
  }

  public SBError Install(SBFileSpec src, SBFileSpec dst) {
    return new SBError(lldbJNI.SBPlatform_Install(swigCPtr, this, SBFileSpec.getCPtr(src), src, SBFileSpec.getCPtr(dst), dst), true);
  }

  public SBError Run(SBPlatformShellCommand shell_command) {
    return new SBError(lldbJNI.SBPlatform_Run(swigCPtr, this, SBPlatformShellCommand.getCPtr(shell_command), shell_command), true);
  }

  public SBError Launch(SBLaunchInfo launch_info) {
    return new SBError(lldbJNI.SBPlatform_Launch(swigCPtr, this, SBLaunchInfo.getCPtr(launch_info), launch_info), true);
  }

  public SBError Kill(java.math.BigInteger pid) {
    return new SBError(lldbJNI.SBPlatform_Kill(swigCPtr, this, pid), true);
  }

  public SBError MakeDirectory(String path, long file_permissions) {
    return new SBError(lldbJNI.SBPlatform_MakeDirectory__SWIG_0(swigCPtr, this, path, file_permissions), true);
  }

  public SBError MakeDirectory(String path) {
    return new SBError(lldbJNI.SBPlatform_MakeDirectory__SWIG_1(swigCPtr, this, path), true);
  }

  public long GetFilePermissions(String path) {
    return lldbJNI.SBPlatform_GetFilePermissions(swigCPtr, this, path);
  }

  public SBError SetFilePermissions(String path, long file_permissions) {
    return new SBError(lldbJNI.SBPlatform_SetFilePermissions(swigCPtr, this, path, file_permissions), true);
  }

  public SBUnixSignals GetUnixSignals() {
    return new SBUnixSignals(lldbJNI.SBPlatform_GetUnixSignals(swigCPtr, this), true);
  }

  public SBEnvironment GetEnvironment() {
    return new SBEnvironment(lldbJNI.SBPlatform_GetEnvironment(swigCPtr, this), true);
  }

}
