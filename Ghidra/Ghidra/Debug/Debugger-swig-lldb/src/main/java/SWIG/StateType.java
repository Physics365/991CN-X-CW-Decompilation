/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class StateType {
  public final static StateType eStateInvalid = new StateType("eStateInvalid", lldbJNI.eStateInvalid_get());
  public final static StateType eStateUnloaded = new StateType("eStateUnloaded");
  public final static StateType eStateConnected = new StateType("eStateConnected");
  public final static StateType eStateAttaching = new StateType("eStateAttaching");
  public final static StateType eStateLaunching = new StateType("eStateLaunching");
  public final static StateType eStateStopped = new StateType("eStateStopped");
  public final static StateType eStateRunning = new StateType("eStateRunning");
  public final static StateType eStateStepping = new StateType("eStateStepping");
  public final static StateType eStateCrashed = new StateType("eStateCrashed");
  public final static StateType eStateDetached = new StateType("eStateDetached");
  public final static StateType eStateExited = new StateType("eStateExited");
  public final static StateType eStateSuspended = new StateType("eStateSuspended");
  public final static StateType kLastStateType = new StateType("kLastStateType", lldbJNI.kLastStateType_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static StateType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + StateType.class + " with value " + swigValue);
  }

  private StateType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private StateType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private StateType(String swigName, StateType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static StateType[] swigValues = { eStateInvalid, eStateUnloaded, eStateConnected, eStateAttaching, eStateLaunching, eStateStopped, eStateRunning, eStateStepping, eStateCrashed, eStateDetached, eStateExited, eStateSuspended, kLastStateType };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

