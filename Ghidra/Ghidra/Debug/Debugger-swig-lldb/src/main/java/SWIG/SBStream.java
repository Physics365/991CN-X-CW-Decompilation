/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBStream {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBStream(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBStream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBStream(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBStream() {
    this(lldbJNI.new_SBStream(), true);
  }

  public boolean IsValid() {
    return lldbJNI.SBStream_IsValid(swigCPtr, this);
  }

  public String GetData() {
    return lldbJNI.SBStream_GetData(swigCPtr, this);
  }

  public long GetSize() {
    return lldbJNI.SBStream_GetSize(swigCPtr, this);
  }

  public void Print(String str) {
    lldbJNI.SBStream_Print(swigCPtr, this, str);
  }

  public void RedirectToFile(String path, boolean append) {
    lldbJNI.SBStream_RedirectToFile__SWIG_0(swigCPtr, this, path, append);
  }

  public void RedirectToFile(SBFile file) {
    lldbJNI.SBStream_RedirectToFile__SWIG_1(swigCPtr, this, SBFile.getCPtr(file), file);
  }

  public void RedirectToFile(SWIGTYPE_p_std__shared_ptrT_lldb_private__File_t file) {
    lldbJNI.SBStream_RedirectToFile__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__shared_ptrT_lldb_private__File_t.getCPtr(file));
  }

  public void RedirectToFileHandle(SWIGTYPE_p_std__shared_ptrT_lldb_private__File_t file, boolean transfer_fh_ownership) {
    lldbJNI.SBStream_RedirectToFileHandle(swigCPtr, this, SWIGTYPE_p_std__shared_ptrT_lldb_private__File_t.getCPtr(file), transfer_fh_ownership);
  }

  public void RedirectToFileDescriptor(int fd, boolean transfer_fh_ownership) {
    lldbJNI.SBStream_RedirectToFileDescriptor(swigCPtr, this, fd, transfer_fh_ownership);
  }

  public void Clear() {
    lldbJNI.SBStream_Clear(swigCPtr, this);
  }

}
