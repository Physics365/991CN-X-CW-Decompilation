/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBListener {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBListener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBListener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBListener() {
    this(lldbJNI.new_SBListener__SWIG_0(), true);
  }

  public SBListener(String name) {
    this(lldbJNI.new_SBListener__SWIG_1(name), true);
  }

  public SBListener(SBListener rhs) {
    this(lldbJNI.new_SBListener__SWIG_2(SBListener.getCPtr(rhs), rhs), true);
  }

  public void AddEvent(SBEvent event) {
    lldbJNI.SBListener_AddEvent(swigCPtr, this, SBEvent.getCPtr(event), event);
  }

  public void Clear() {
    lldbJNI.SBListener_Clear(swigCPtr, this);
  }

  public boolean IsValid() {
    return lldbJNI.SBListener_IsValid(swigCPtr, this);
  }

  public long StartListeningForEventClass(SBDebugger debugger, String broadcaster_class, long event_mask) {
    return lldbJNI.SBListener_StartListeningForEventClass(swigCPtr, this, SBDebugger.getCPtr(debugger), debugger, broadcaster_class, event_mask);
  }

  public long StopListeningForEventClass(SBDebugger debugger, String broadcaster_class, long event_mask) {
    return lldbJNI.SBListener_StopListeningForEventClass(swigCPtr, this, SBDebugger.getCPtr(debugger), debugger, broadcaster_class, event_mask);
  }

  public long StartListeningForEvents(SBBroadcaster broadcaster, long event_mask) {
    return lldbJNI.SBListener_StartListeningForEvents(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, event_mask);
  }

  public boolean StopListeningForEvents(SBBroadcaster broadcaster, long event_mask) {
    return lldbJNI.SBListener_StopListeningForEvents(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, event_mask);
  }

  public boolean WaitForEvent(long num_seconds, SBEvent event) {
    return lldbJNI.SBListener_WaitForEvent(swigCPtr, this, num_seconds, SBEvent.getCPtr(event), event);
  }

  public boolean WaitForEventForBroadcaster(long num_seconds, SBBroadcaster broadcaster, SBEvent sb_event) {
    return lldbJNI.SBListener_WaitForEventForBroadcaster(swigCPtr, this, num_seconds, SBBroadcaster.getCPtr(broadcaster), broadcaster, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean WaitForEventForBroadcasterWithType(long num_seconds, SBBroadcaster broadcaster, long event_type_mask, SBEvent sb_event) {
    return lldbJNI.SBListener_WaitForEventForBroadcasterWithType(swigCPtr, this, num_seconds, SBBroadcaster.getCPtr(broadcaster), broadcaster, event_type_mask, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean PeekAtNextEvent(SBEvent sb_event) {
    return lldbJNI.SBListener_PeekAtNextEvent(swigCPtr, this, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean PeekAtNextEventForBroadcaster(SBBroadcaster broadcaster, SBEvent sb_event) {
    return lldbJNI.SBListener_PeekAtNextEventForBroadcaster(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean PeekAtNextEventForBroadcasterWithType(SBBroadcaster broadcaster, long event_type_mask, SBEvent sb_event) {
    return lldbJNI.SBListener_PeekAtNextEventForBroadcasterWithType(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, event_type_mask, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean GetNextEvent(SBEvent sb_event) {
    return lldbJNI.SBListener_GetNextEvent(swigCPtr, this, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean GetNextEventForBroadcaster(SBBroadcaster broadcaster, SBEvent sb_event) {
    return lldbJNI.SBListener_GetNextEventForBroadcaster(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean GetNextEventForBroadcasterWithType(SBBroadcaster broadcaster, long event_type_mask, SBEvent sb_event) {
    return lldbJNI.SBListener_GetNextEventForBroadcasterWithType(swigCPtr, this, SBBroadcaster.getCPtr(broadcaster), broadcaster, event_type_mask, SBEvent.getCPtr(sb_event), sb_event);
  }

  public boolean HandleBroadcastEvent(SBEvent event) {
    return lldbJNI.SBListener_HandleBroadcastEvent(swigCPtr, this, SBEvent.getCPtr(event), event);
  }

}
