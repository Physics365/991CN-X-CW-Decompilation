/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class SectionType {
  public final static SectionType eSectionTypeInvalid = new SectionType("eSectionTypeInvalid");
  public final static SectionType eSectionTypeCode = new SectionType("eSectionTypeCode");
  public final static SectionType eSectionTypeContainer = new SectionType("eSectionTypeContainer");
  public final static SectionType eSectionTypeData = new SectionType("eSectionTypeData");
  public final static SectionType eSectionTypeDataCString = new SectionType("eSectionTypeDataCString");
  public final static SectionType eSectionTypeDataCStringPointers = new SectionType("eSectionTypeDataCStringPointers");
  public final static SectionType eSectionTypeDataSymbolAddress = new SectionType("eSectionTypeDataSymbolAddress");
  public final static SectionType eSectionTypeData4 = new SectionType("eSectionTypeData4");
  public final static SectionType eSectionTypeData8 = new SectionType("eSectionTypeData8");
  public final static SectionType eSectionTypeData16 = new SectionType("eSectionTypeData16");
  public final static SectionType eSectionTypeDataPointers = new SectionType("eSectionTypeDataPointers");
  public final static SectionType eSectionTypeDebug = new SectionType("eSectionTypeDebug");
  public final static SectionType eSectionTypeZeroFill = new SectionType("eSectionTypeZeroFill");
  public final static SectionType eSectionTypeDataObjCMessageRefs = new SectionType("eSectionTypeDataObjCMessageRefs");
  public final static SectionType eSectionTypeDataObjCCFStrings = new SectionType("eSectionTypeDataObjCCFStrings");
  public final static SectionType eSectionTypeDWARFDebugAbbrev = new SectionType("eSectionTypeDWARFDebugAbbrev");
  public final static SectionType eSectionTypeDWARFDebugAddr = new SectionType("eSectionTypeDWARFDebugAddr");
  public final static SectionType eSectionTypeDWARFDebugAranges = new SectionType("eSectionTypeDWARFDebugAranges");
  public final static SectionType eSectionTypeDWARFDebugCuIndex = new SectionType("eSectionTypeDWARFDebugCuIndex");
  public final static SectionType eSectionTypeDWARFDebugFrame = new SectionType("eSectionTypeDWARFDebugFrame");
  public final static SectionType eSectionTypeDWARFDebugInfo = new SectionType("eSectionTypeDWARFDebugInfo");
  public final static SectionType eSectionTypeDWARFDebugLine = new SectionType("eSectionTypeDWARFDebugLine");
  public final static SectionType eSectionTypeDWARFDebugLoc = new SectionType("eSectionTypeDWARFDebugLoc");
  public final static SectionType eSectionTypeDWARFDebugMacInfo = new SectionType("eSectionTypeDWARFDebugMacInfo");
  public final static SectionType eSectionTypeDWARFDebugMacro = new SectionType("eSectionTypeDWARFDebugMacro");
  public final static SectionType eSectionTypeDWARFDebugPubNames = new SectionType("eSectionTypeDWARFDebugPubNames");
  public final static SectionType eSectionTypeDWARFDebugPubTypes = new SectionType("eSectionTypeDWARFDebugPubTypes");
  public final static SectionType eSectionTypeDWARFDebugRanges = new SectionType("eSectionTypeDWARFDebugRanges");
  public final static SectionType eSectionTypeDWARFDebugStr = new SectionType("eSectionTypeDWARFDebugStr");
  public final static SectionType eSectionTypeDWARFDebugStrOffsets = new SectionType("eSectionTypeDWARFDebugStrOffsets");
  public final static SectionType eSectionTypeDWARFAppleNames = new SectionType("eSectionTypeDWARFAppleNames");
  public final static SectionType eSectionTypeDWARFAppleTypes = new SectionType("eSectionTypeDWARFAppleTypes");
  public final static SectionType eSectionTypeDWARFAppleNamespaces = new SectionType("eSectionTypeDWARFAppleNamespaces");
  public final static SectionType eSectionTypeDWARFAppleObjC = new SectionType("eSectionTypeDWARFAppleObjC");
  public final static SectionType eSectionTypeELFSymbolTable = new SectionType("eSectionTypeELFSymbolTable");
  public final static SectionType eSectionTypeELFDynamicSymbols = new SectionType("eSectionTypeELFDynamicSymbols");
  public final static SectionType eSectionTypeELFRelocationEntries = new SectionType("eSectionTypeELFRelocationEntries");
  public final static SectionType eSectionTypeELFDynamicLinkInfo = new SectionType("eSectionTypeELFDynamicLinkInfo");
  public final static SectionType eSectionTypeEHFrame = new SectionType("eSectionTypeEHFrame");
  public final static SectionType eSectionTypeARMexidx = new SectionType("eSectionTypeARMexidx");
  public final static SectionType eSectionTypeARMextab = new SectionType("eSectionTypeARMextab");
  public final static SectionType eSectionTypeCompactUnwind = new SectionType("eSectionTypeCompactUnwind");
  public final static SectionType eSectionTypeGoSymtab = new SectionType("eSectionTypeGoSymtab");
  public final static SectionType eSectionTypeAbsoluteAddress = new SectionType("eSectionTypeAbsoluteAddress");
  public final static SectionType eSectionTypeDWARFGNUDebugAltLink = new SectionType("eSectionTypeDWARFGNUDebugAltLink");
  public final static SectionType eSectionTypeDWARFDebugTypes = new SectionType("eSectionTypeDWARFDebugTypes");
  public final static SectionType eSectionTypeDWARFDebugNames = new SectionType("eSectionTypeDWARFDebugNames");
  public final static SectionType eSectionTypeOther = new SectionType("eSectionTypeOther");
  public final static SectionType eSectionTypeDWARFDebugLineStr = new SectionType("eSectionTypeDWARFDebugLineStr");
  public final static SectionType eSectionTypeDWARFDebugRngLists = new SectionType("eSectionTypeDWARFDebugRngLists");
  public final static SectionType eSectionTypeDWARFDebugLocLists = new SectionType("eSectionTypeDWARFDebugLocLists");
  public final static SectionType eSectionTypeDWARFDebugAbbrevDwo = new SectionType("eSectionTypeDWARFDebugAbbrevDwo");
  public final static SectionType eSectionTypeDWARFDebugInfoDwo = new SectionType("eSectionTypeDWARFDebugInfoDwo");
  public final static SectionType eSectionTypeDWARFDebugStrDwo = new SectionType("eSectionTypeDWARFDebugStrDwo");
  public final static SectionType eSectionTypeDWARFDebugStrOffsetsDwo = new SectionType("eSectionTypeDWARFDebugStrOffsetsDwo");
  public final static SectionType eSectionTypeDWARFDebugTypesDwo = new SectionType("eSectionTypeDWARFDebugTypesDwo");
  public final static SectionType eSectionTypeDWARFDebugRngListsDwo = new SectionType("eSectionTypeDWARFDebugRngListsDwo");
  public final static SectionType eSectionTypeDWARFDebugLocDwo = new SectionType("eSectionTypeDWARFDebugLocDwo");
  public final static SectionType eSectionTypeDWARFDebugLocListsDwo = new SectionType("eSectionTypeDWARFDebugLocListsDwo");
  public final static SectionType eSectionTypeDWARFDebugTuIndex = new SectionType("eSectionTypeDWARFDebugTuIndex");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static SectionType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + SectionType.class + " with value " + swigValue);
  }

  private SectionType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private SectionType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private SectionType(String swigName, SectionType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static SectionType[] swigValues = { eSectionTypeInvalid, eSectionTypeCode, eSectionTypeContainer, eSectionTypeData, eSectionTypeDataCString, eSectionTypeDataCStringPointers, eSectionTypeDataSymbolAddress, eSectionTypeData4, eSectionTypeData8, eSectionTypeData16, eSectionTypeDataPointers, eSectionTypeDebug, eSectionTypeZeroFill, eSectionTypeDataObjCMessageRefs, eSectionTypeDataObjCCFStrings, eSectionTypeDWARFDebugAbbrev, eSectionTypeDWARFDebugAddr, eSectionTypeDWARFDebugAranges, eSectionTypeDWARFDebugCuIndex, eSectionTypeDWARFDebugFrame, eSectionTypeDWARFDebugInfo, eSectionTypeDWARFDebugLine, eSectionTypeDWARFDebugLoc, eSectionTypeDWARFDebugMacInfo, eSectionTypeDWARFDebugMacro, eSectionTypeDWARFDebugPubNames, eSectionTypeDWARFDebugPubTypes, eSectionTypeDWARFDebugRanges, eSectionTypeDWARFDebugStr, eSectionTypeDWARFDebugStrOffsets, eSectionTypeDWARFAppleNames, eSectionTypeDWARFAppleTypes, eSectionTypeDWARFAppleNamespaces, eSectionTypeDWARFAppleObjC, eSectionTypeELFSymbolTable, eSectionTypeELFDynamicSymbols, eSectionTypeELFRelocationEntries, eSectionTypeELFDynamicLinkInfo, eSectionTypeEHFrame, eSectionTypeARMexidx, eSectionTypeARMextab, eSectionTypeCompactUnwind, eSectionTypeGoSymtab, eSectionTypeAbsoluteAddress, eSectionTypeDWARFGNUDebugAltLink, eSectionTypeDWARFDebugTypes, eSectionTypeDWARFDebugNames, eSectionTypeOther, eSectionTypeDWARFDebugLineStr, eSectionTypeDWARFDebugRngLists, eSectionTypeDWARFDebugLocLists, eSectionTypeDWARFDebugAbbrevDwo, eSectionTypeDWARFDebugInfoDwo, eSectionTypeDWARFDebugStrDwo, eSectionTypeDWARFDebugStrOffsetsDwo, eSectionTypeDWARFDebugTypesDwo, eSectionTypeDWARFDebugRngListsDwo, eSectionTypeDWARFDebugLocDwo, eSectionTypeDWARFDebugLocListsDwo, eSectionTypeDWARFDebugTuIndex };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

