/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBTraceCursor {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBTraceCursor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBTraceCursor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBTraceCursor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBTraceCursor() {
    this(lldbJNI.new_SBTraceCursor__SWIG_0(), true);
  }

  public SBTraceCursor(SWIGTYPE_p_std__shared_ptrT_lldb_private__TraceCursor_t trace_cursor_sp) {
    this(lldbJNI.new_SBTraceCursor__SWIG_1(SWIGTYPE_p_std__shared_ptrT_lldb_private__TraceCursor_t.getCPtr(trace_cursor_sp)), true);
  }

  public void SetForwards(boolean forwards) {
    lldbJNI.SBTraceCursor_SetForwards(swigCPtr, this, forwards);
  }

  public boolean IsForwards() {
    return lldbJNI.SBTraceCursor_IsForwards(swigCPtr, this);
  }

  public void Next() {
    lldbJNI.SBTraceCursor_Next(swigCPtr, this);
  }

  public boolean HasValue() {
    return lldbJNI.SBTraceCursor_HasValue(swigCPtr, this);
  }

  public boolean GoToId(java.math.BigInteger id) {
    return lldbJNI.SBTraceCursor_GoToId(swigCPtr, this, id);
  }

  public boolean HasId(java.math.BigInteger id) {
    return lldbJNI.SBTraceCursor_HasId(swigCPtr, this, id);
  }

  public java.math.BigInteger GetId() {
    return lldbJNI.SBTraceCursor_GetId(swigCPtr, this);
  }

  public boolean Seek(long offset, TraceCursorSeekType origin) {
    return lldbJNI.SBTraceCursor_Seek(swigCPtr, this, offset, origin.swigValue());
  }

  public TraceItemKind GetItemKind() {
    return TraceItemKind.swigToEnum(lldbJNI.SBTraceCursor_GetItemKind(swigCPtr, this));
  }

  public boolean IsError() {
    return lldbJNI.SBTraceCursor_IsError(swigCPtr, this);
  }

  public String GetError() {
    return lldbJNI.SBTraceCursor_GetError(swigCPtr, this);
  }

  public boolean IsEvent() {
    return lldbJNI.SBTraceCursor_IsEvent(swigCPtr, this);
  }

  public TraceEvent GetEventType() {
    return TraceEvent.swigToEnum(lldbJNI.SBTraceCursor_GetEventType(swigCPtr, this));
  }

  public String GetEventTypeAsString() {
    return lldbJNI.SBTraceCursor_GetEventTypeAsString(swigCPtr, this);
  }

  public boolean IsInstruction() {
    return lldbJNI.SBTraceCursor_IsInstruction(swigCPtr, this);
  }

  public java.math.BigInteger GetLoadAddress() {
    return lldbJNI.SBTraceCursor_GetLoadAddress(swigCPtr, this);
  }

  public long GetCPU() {
    return lldbJNI.SBTraceCursor_GetCPU(swigCPtr, this);
  }

  public boolean IsValid() {
    return lldbJNI.SBTraceCursor_IsValid(swigCPtr, this);
  }

}
